@model QPR_Application.Models.Entities.punitivevigilanceqrs

@{
    ViewData["Title"] = "PunitiveVigilance";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="text-center">
    <h3>Punitive Vigilance</h3>
</div>
<hr />

<form asp-action="PunitiveVigilance" id="PunitiveVigilanceQPRForm">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="w-80 mt-5 mb-3 box-green ">
        <b>
            7. Age-wise data of disposed departmental proceedings during the quarter (nos)
        </b>
    </div>

    <div class="w-80 mt-2 mb-3 box-green ">
        <b>
            (A) Time taken to conclude the proceedings from the stage of registration of complaint till final disposal (nos)
        </b>
    </div>

    <div class="w-75 m-auto">
        <table class="table table-striped table-bordered w-100 text-align-middle table-blue table-padding">
            <tbody>
                <tr></tr>
                <tr class="text-center">
                    <th rowspan="2"><b>Nature of Proceedings</b></th>
                    <th rowspan="2"><b>3 - 6 months</b></th>
                    <th rowspan="2"><b>6 months - 1 year</b></th>
                    <th rowspan="2"><b>1 - 2 year</b></th>
                    <th rowspan="2"><b>over 2 years</b></th>
                    <th rowspan="2"><b>over 3 years</b></th>
                </tr>
                <tr></tr>
                <tr class="text-center tr-grey">
                    <td>&nbsp;<b>(1)</b></td>
                    <td>&nbsp;<b>(2)</b></td>
                    <td>&nbsp;<b>(3)</b></td>
                    <td>&nbsp;<b>(4)</b></td>
                    <td>&nbsp;<b>(5)</b></td>
                    <td>&nbsp;<b>(6)</b></td>
                </tr>
                <tr>
                    <td class="text-center"><b>Major</b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_major_threetosix_months" name="punitive_vigilance_finaldisposal_major_threetosix_months" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_major_sixtotwelve_months" name="punitive_vigilance_finaldisposal_major_sixtotwelve_months" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_major_onetotwo_year" name="punitive_vigilance_finaldisposal_major_onetotwo_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_major_overtwo_year" name="punitive_vigilance_finaldisposal_major_overtwo_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_major_overthree_year" name="punitive_vigilance_finaldisposal_major_overthree_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
                <tr>
                    <td class="text-center"><b>Minor</b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_minor_threetosix_months" name="punitive_vigilance_finaldisposal_minor_threetosix_months" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_minor_sixtotwelve_months" name="punitive_vigilance_finaldisposal_minor_sixtotwelve_months" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_minor_onetotwo_year" name="punitive_vigilance_finaldisposal_minor_onetotwo_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_minor_overtwo_year" name="punitive_vigilance_finaldisposal_minor_overtwo_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_finaldisposal_minor_overthree_year" name="punitive_vigilance_finaldisposal_minor_overthree_year" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="center w-70 mt-2">
        <p>Time taken to be determined with reference to date of registration of complaint for investigation by CVO to issue of final orders by DA</p>
    </div>

    <div class="w-80 mt-5 mb-3 box-green ">
        <b>
            7.(B) Major Penalty Proceedings
        </b>
    </div>


    <div class="w-75 m-auto">
        <table class="table table-striped table-bordered w-100 text-align-middle table-blue table-padding">
            <tbody>
                <tr></tr>
                <tr class="text-center">
                    <th rowspan="2"><b>No. of Case</b></th>
                    <th rowspan="2"><b>No. of Officials against whom proceeding finalized(out of column 1)</b></th>
                    <th rowspan="2"><b>Cut in pension(out of column 2)</b></th>
                    <th rowspan="2"><b>Dismissal removal Compulsory Retirement(out of column 2)</b></th>
                    <th rowspan="2"><b>Reduction in Lower time Scale/ Rank(out of column 2)</b></th>
                    <th rowspan="2"><b>Other Major penalties(out of column 2)</b></th>
                    <th rowspan="2"><b>Minor Penalties other then Censure/ Warning(out of column 2)</b></th>
                    <th rowspan="2"><b>Censure/Warning(out of column 2)</b></th>
                    <th rowspan="2"><b>No Action/exoneration(out of column 2)</b></th>
                </tr>
                <tr></tr>
                <tr class="text-center tr-grey">
                    <td>&nbsp;<b>(1)</b></td>
                    <td>&nbsp;<b>(2)</b></td>
                    <td>&nbsp;<b>(3)</b></td>
                    <td>&nbsp;<b>(4)</b></td>
                    <td>&nbsp;<b>(5)</b></td>
                    <td>&nbsp;<b>(6)</b></td>
                    <td>&nbsp;<b>(7)</b></td>
                    <td>&nbsp;<b>(8)</b></td>
                    <td>&nbsp;<b>(9)</b></td>
                </tr>
                <tr>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_numberofcase" name="punitive_vigilance_majorpenalty_numberofcase" class="form-control" readonly></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_numberofofficer_against" name="punitive_vigilance_majorpenalty_numberofofficer_against" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_cutinpension" name="punitive_vigilance_majorpenalty_cutinpension" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_dismissal" name="punitive_vigilance_majorpenalty_dismissal" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_reduction_scale" name="punitive_vigilance_majorpenalty_reduction_scale" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_other_majorpenalties" name="punitive_vigilance_majorpenalty_other_majorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_minorpenalties" name="punitive_vigilance_majorpenalty_minorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_censure_warning" name="punitive_vigilance_majorpenalty_censure_warning" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_majorpenalty_noaction" name="punitive_vigilance_majorpenalty_noaction" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="w-80 mt-5 mb-3 box-green ">
        <b>
            7.(C) Minor Penalty Proceedings
        </b>
    </div>

    <div class="w-75 m-auto">
        <table class="table table-striped table-bordered w-100 text-align-middle table-blue table-padding">
            <tbody>
                <tr></tr>
                <tr class="text-center">
                    <th rowspan="2"><b>No. of Case</b></th>
                    <th rowspan="2"><b>No. of Officials against whom proceeding finalized</b></th>
                    <th rowspan="2"><b>Reduction to lower stage</b></th>
                    <th rowspan="2"><b>Postponement/ Withholding of Increment</b></th>
                    <th rowspan="2"><b>Recovery from pay</b></th>
                    <th rowspan="2"><b>With holding of promotion</b></th>
                    <th rowspan="2"><b>Censure</b></th>
                    <th rowspan="2"><b>Exoneration</b></th>
                </tr>
                <tr></tr>
                <tr class="text-center tr-grey">
                    <td>&nbsp;<b>(1)</b></td>
                    <td>&nbsp;<b>(2)</b></td>
                    <td>&nbsp;<b>(3)</b></td>
                    <td>&nbsp;<b>(4)</b></td>
                    <td>&nbsp;<b>(5)</b></td>
                    <td>&nbsp;<b>(6)</b></td>
                    <td>&nbsp;<b>(7)</b></td>
                    <td>&nbsp;<b>(8)</b></td>

                </tr>
                <tr>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_numberofcase" name="punitive_vigilance_minorpenalty_numberofcase" class="form-control" readonly></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_numberofofficer_against" name="punitive_vigilance_minorpenalty_numberofofficer_against" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_reduction_lowerstage" name="punitive_vigilance_minorpenalty_reduction_lowerstage" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_postponement" name="punitive_vigilance_minorpenalty_postponement" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_recovery_pay" name="punitive_vigilance_minorpenalty_recovery_pay" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_holding_promotion" name="punitive_vigilance_minorpenalty_holding_promotion" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_censure" name="punitive_vigilance_minorpenalty_censure" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitive_vigilance_minorpenalty_exoneration" name="punitive_vigilance_minorpenalty_exoneration" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="w-80 mt-5 mb-3 box-green ">
        <b>
            7.(D) Rank- wise Break up of Major Penalty Awarded /Final Order Issued <label> &nbsp;&nbsp;<a asp-action="Instructions" target="_blank">See Instruction Before Filling</a></label> &nbsp;&nbsp;i.e. 7(B)+7(C)
        </b>
    </div>



    <div class="w-75 m-auto">
        <table class="table table-striped table-bordered w-100 text-align-middle table-blue table-padding">
            <tbody>
                <tr class="text-center">
                    <th rowspan="2" width="15%"><b>Group</b></th>
                    <th rowspan="2"><b>No. of Cases<br><br>7(B)(1)+7(C)(1)</b></th>
                    <th rowspan="2"><b>No.of officials against whom proceedings finalized<br><br>7(B)(2)+7(C)(2)</b></th>
                    <th rowspan="2"><b>Cut in pension imposed<br><br>7(B)(3)</b></th>
                    <th rowspan="2"><b>Dismissal/Removal/Compulsory Retirement imposed<br><br>7(B)(4)</b></th>
                    <th rowspan="2"><b>Reduction to lower time scale/in Rank imposed<br><br>7(B)(5)+7(C)(3)</b></th>
                    <th rowspan="2"><b>Other Major penalties imposed<br><br>7(B)(6)</b></th>
                    <th rowspan="2"><b>Minor Penalties other than Censure/ Warning<br><br>7(B)(7)+7(C)(4)+7(C)(5)+7(C)(6)</b></th>
                    <th rowspan="2"><b>Censure imposed<br><br>7(B)(8)+7(C)(7)</b></th>
                    <th rowspan="2"><b>No action exoneration<br><br>7(B)(9)+7(C)(8)</b></th>
                </tr>
                <tr></tr>
                <tr class="text-center tr-grey">
                    <td>&nbsp;<b>(1)</b></td>
                    <td>&nbsp;<b>(2)</b></td>
                    <td>&nbsp;<b>(3)</b></td>
                    <td>&nbsp;<b>(4)</b></td>
                    <td>&nbsp;<b>(5)</b></td>
                    <td>&nbsp;<b>(6)</b></td>
                    <td>&nbsp;<b>(7)</b></td>
                    <td>&nbsp;<b>(8)</b></td>
                    <td>&nbsp;<b>(9)</b></td>
                    <td>&nbsp;<b>(10)</b></td>
                </tr>
                <tr>
                    <td align="left" class="text-center"><b>C</b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_numberofofficer" name="punitivevigilance_riskwisebreakup_groupc_numberofofficer" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_officeragainst" name="punitivevigilance_riskwisebreakup_groupc_officeragainst" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_pensioncut" name="punitivevigilance_riskwisebreakup_groupc_pensioncut" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_dismissal" name="punitivevigilance_riskwisebreakup_groupc_dismissal" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_reductionscale" name="punitivevigilance_riskwisebreakup_groupc_reductionscale" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_majorpenalties" name="punitivevigilance_riskwisebreakup_groupc_majorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_minorpenalties" name="punitivevigilance_riskwisebreakup_groupc_minorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_censure" name="punitivevigilance_riskwisebreakup_groupc_censure" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupc_noaction" name="punitivevigilance_riskwisebreakup_groupc_noaction" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
                <tr>
                    <td align="left" class="text-center"><b>B</b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_numberofofficer" name="punitivevigilance_riskwisebreakup_groupb_numberofofficer" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_officeragainst" name="punitivevigilance_riskwisebreakup_groupb_officeragainst" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_pensioncut" name="punitivevigilance_riskwisebreakup_groupb_pensioncut" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_dismissal" name="punitivevigilance_riskwisebreakup_groupb_dismissal" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_reductionscale" name="punitivevigilance_riskwisebreakup_groupb_reductionscale" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_majorpenalties" name="punitivevigilance_riskwisebreakup_groupb_majorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_minorpenalties" name="punitivevigilance_riskwisebreakup_groupb_minorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_censure" name="punitivevigilance_riskwisebreakup_groupb_censure" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupb_noaction" name="punitivevigilance_riskwisebreakup_groupb_noaction" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
                <tr>
                    <td align="left" class="text-center"><b>A up to DS/Director level</b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_numberofofficer" name="punitivevigilance_riskwisebreakup_groupa_numberofofficer" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_officeragainst" name="punitivevigilance_riskwisebreakup_groupa_officeragainst" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_pensioncut" name="punitivevigilance_riskwisebreakup_groupa_pensioncut" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_dismissal" name="punitivevigilance_riskwisebreakup_groupa_dismissal" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_reductionscale" name="punitivevigilance_riskwisebreakup_groupa_reductionscale" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_majorpenalties" name="punitivevigilance_riskwisebreakup_groupa_majorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_minorpenalties" name="punitivevigilance_riskwisebreakup_groupa_minorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_censure" name="punitivevigilance_riskwisebreakup_groupa_censure" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_groupa_noaction" name="punitivevigilance_riskwisebreakup_groupa_noaction" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
                <tr>
                    <td align="left" class="text-center"><b>&nbsp;&nbsp;JS and above</b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_numberofofficer" name="punitivevigilance_riskwisebreakup_js_numberofofficer" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_officeragainst" name="punitivevigilance_riskwisebreakup_js_officeragainst" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_pensioncut" name="punitivevigilance_riskwisebreakup_js_pensioncut" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_dismissal" name="punitivevigilance_riskwisebreakup_js_dismissal" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_reductionscale" name="punitivevigilance_riskwisebreakup_js_reductionscale" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_majorpenalties" name="punitivevigilance_riskwisebreakup_js_majorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_minorpenalties" name="punitivevigilance_riskwisebreakup_js_minorpenalties" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_censure" name="punitivevigilance_riskwisebreakup_js_censure" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                    <td><b><input asp-for="punitivevigilance_riskwisebreakup_js_noaction" name="punitivevigilance_riskwisebreakup_js_noaction" onkeypress="return isNumberKey(event);" class="form-control"></b></td>
                </tr>
            </tbody>
        </table>
    </div>

    @* <div class="w-25 m-auto text-center">

    @if (ViewBag.ComplaintsMessage != null)
    {
    @ViewBag.ComplaintsMessage
    }

    </div> *@

    <div class="d-flex justify-content-between w-80 m-auto mt-5">
        <a class="btn btn-secondary" asp-action="StatusofPendencyFIandCACases">Back</a>
        <input type="submit" value="Save" class="btn btn-success" asp-action="SavePunitiveVigilance" onclick="return VERIFY_SAVE_PUNITIVE_VIG()" />
        <input type="submit" value="Next" class="btn btn-primary " onclick="return VERIFY_NEXT_PUNITIVE_VIG()" />
    </div>

</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


<script>
    $(function () {
        var complaintsMessage = '@ViewBag.ComplaintsMessage';
        if (complaintsMessage) {
            var notificationIcon;

            if (complaintsMessage == 'Saved' || complaintsMessage == 'Deleted successfully') {
                notificationIcon = 'success'
            }

            if (complaintsMessage.includes('Error')) {
                notificationIcon = 'error'
            }

            Swal.fire({
                // title: complaintsMessage,
                text: complaintsMessage,
                icon: notificationIcon,
                confirmButtonText: 'Okay'
            }).then((result) => {
                if (result.isConfirmed) {
                    pageReloadWithoutQueryString();
                } else {
                    // Optional: Handle cancel action
                }
            });
        }
        performComTotal();
    });

    //$('#StatusOfPendency_pendency_status_fi_addduringqtr, #StatusOfPendency_pendency_status_fi_reply_commission, #StatusOfPendency_pendency_status_ca_addduringqtr, #StatusOfPendency_pendency_status_ca_comments_commission').on('input', performComTotal);


    function performComTotal() {
        //$('#StatusOfPendency_pendency_status_fi_total').val((parseFloat($('#StatusOfPendency_pendency_status_fi_addduringqtr').val()) || 0) + (parseFloat($('#StatusOfPendency_pendency_status_fi_previousqtr').val()) || 0));

        var total = 0;
        $("#punitive_vigilance_finaldisposal_major_threetosix_months,#punitive_vigilance_finaldisposal_major_sixtotwelve_months,#punitive_vigilance_finaldisposal_major_onetotwo_year,#punitive_vigilance_finaldisposal_major_overtwo_year,#punitive_vigilance_finaldisposal_major_overthree_year").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        $("#punitive_vigilance_majorpenalty_numberofcase").val(total);

        total = 0;
        $("#punitive_vigilance_finaldisposal_minor_threetosix_months,#punitive_vigilance_finaldisposal_minor_sixtotwelve_months,#punitive_vigilance_finaldisposal_minor_onetotwo_year,#punitive_vigilance_finaldisposal_minor_overtwo_year,#punitive_vigilance_finaldisposal_minor_overthree_year").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        $("#punitive_vigilance_minorpenalty_numberofcase").val(total);

    }

</script>

<script>
    $("#punitive_vigilance_finaldisposal_major_threetosix_months,#punitive_vigilance_finaldisposal_major_sixtotwelve_months,#punitive_vigilance_finaldisposal_major_onetotwo_year,#punitive_vigilance_finaldisposal_major_overtwo_year,#punitive_vigilance_finaldisposal_major_overthree_year").on("keyup", function () {
        var total = 0;
        $("#punitive_vigilance_finaldisposal_major_threetosix_months,#punitive_vigilance_finaldisposal_major_sixtotwelve_months,#punitive_vigilance_finaldisposal_major_onetotwo_year,#punitive_vigilance_finaldisposal_major_overtwo_year,#punitive_vigilance_finaldisposal_major_overthree_year").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        $("#punitive_vigilance_majorpenalty_numberofcase").val(total);
        // performComTotal();
    });

    $("#punitive_vigilance_finaldisposal_minor_threetosix_months,#punitive_vigilance_finaldisposal_minor_sixtotwelve_months,#punitive_vigilance_finaldisposal_minor_onetotwo_year,#punitive_vigilance_finaldisposal_minor_overtwo_year,#punitive_vigilance_finaldisposal_minor_overthree_year").on("keyup", function () {
        var total = 0;
        $("#punitive_vigilance_finaldisposal_minor_threetosix_months,#punitive_vigilance_finaldisposal_minor_sixtotwelve_months,#punitive_vigilance_finaldisposal_minor_onetotwo_year,#punitive_vigilance_finaldisposal_minor_overtwo_year,#punitive_vigilance_finaldisposal_minor_overthree_year").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        $("#punitive_vigilance_minorpenalty_numberofcase").val(total);
        // performComTotal();
    });

    $("#punitive_vigilance_majorpenalty_numberofofficer_against").on("keyup", function () {
        if (parseFloat($("#punitive_vigilance_majorpenalty_numberofofficer_against").val()) > parseFloat($("#punitive_vigilance_majorpenalty_numberofcase").val())) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Cannot be more than no of case: ' + parseFloat($("#punitive_vigilance_majorpenalty_numberofcase").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
            $("#punitive_vigilance_majorpenalty_numberofofficer_against").val(0);
        }
    })


    $("#punitive_vigilance_minorpenalty_numberofofficer_against").on("keyup", function () {
        if (parseFloat($("#punitive_vigilance_minorpenalty_numberofofficer_against").val()) > parseFloat($("#punitive_vigilance_minorpenalty_numberofcase").val())) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Cannot be more than no of case: ' + parseFloat($("#punitive_vigilance_minorpenalty_numberofcase").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
            $("#punitive_vigilance_minorpenalty_numberofofficer_against").val(0);
        }
    })

    $("#punitive_vigilance_majorpenalty_cutinpension,#punitive_vigilance_majorpenalty_dismissal,#punitive_vigilance_majorpenalty_reduction_scale,#punitive_vigilance_majorpenalty_other_majorpenalties,#punitive_vigilance_majorpenalty_minorpenalties,#punitive_vigilance_majorpenalty_censure_warning,#punitive_vigilance_majorpenalty_noaction").on("keyup", function () {
        var total = 0;
        $("#punitive_vigilance_majorpenalty_cutinpension,#punitive_vigilance_majorpenalty_dismissal,#punitive_vigilance_majorpenalty_reduction_scale,#punitive_vigilance_majorpenalty_other_majorpenalties,#punitive_vigilance_majorpenalty_minorpenalties,#punitive_vigilance_majorpenalty_censure_warning,#punitive_vigilance_majorpenalty_noaction").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        if (parseFloat($("#punitive_vigilance_majorpenalty_numberofofficer_against").val()) != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + parseFloat($("#punitive_vigilance_majorpenalty_numberofofficer_against").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }
        if (total > parseFloat($("#punitive_vigilance_majorpenalty_numberofofficer_against").val())) {
            $("#punitive_vigilance_majorpenalty_cutinpension,#punitive_vigilance_majorpenalty_dismissal,#punitive_vigilance_majorpenalty_reduction_scale,#punitive_vigilance_majorpenalty_other_majorpenalties,#punitive_vigilance_majorpenalty_minorpenalties,#punitive_vigilance_majorpenalty_censure_warning,#punitive_vigilance_majorpenalty_noaction").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });

    $("#punitive_vigilance_minorpenalty_reduction_lowerstage,#punitive_vigilance_minorpenalty_postponement,#punitive_vigilance_minorpenalty_recovery_pay,#punitive_vigilance_minorpenalty_holding_promotion,#punitive_vigilance_minorpenalty_censure,#punitive_vigilance_minorpenalty_exoneration").on("keyup", function () {
        var total = 0;
        $("#punitive_vigilance_minorpenalty_reduction_lowerstage,#punitive_vigilance_minorpenalty_postponement,#punitive_vigilance_minorpenalty_recovery_pay,#punitive_vigilance_minorpenalty_holding_promotion,#punitive_vigilance_minorpenalty_censure,#punitive_vigilance_minorpenalty_exoneration").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        if (parseFloat($("#punitive_vigilance_minorpenalty_numberofofficer_against").val()) != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + parseFloat($("#punitive_vigilance_minorpenalty_numberofofficer_against").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }
        if (total > parseFloat($("#punitive_vigilance_minorpenalty_numberofofficer_against").val())) {
            $("#punitive_vigilance_minorpenalty_reduction_lowerstage,#punitive_vigilance_minorpenalty_postponement,#punitive_vigilance_minorpenalty_recovery_pay,#punitive_vigilance_minorpenalty_holding_promotion,#punitive_vigilance_minorpenalty_censure,#punitive_vigilance_minorpenalty_exoneration").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });

    $("#punitivevigilance_riskwisebreakup_groupc_numberofofficer,#punitivevigilance_riskwisebreakup_groupb_numberofofficer,#punitivevigilance_riskwisebreakup_groupa_numberofofficer,#punitivevigilance_riskwisebreakup_js_numberofofficer").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_numberofofficer,#punitivevigilance_riskwisebreakup_groupb_numberofofficer,#punitivevigilance_riskwisebreakup_groupa_numberofofficer,#punitivevigilance_riskwisebreakup_js_numberofofficer").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalNoOfCase = parseFloat($("#punitive_vigilance_minorpenalty_numberofcase").val()) + parseFloat($("#punitive_vigilance_majorpenalty_numberofcase").val())
        if (totalNoOfCase != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalNoOfCase,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }
        if (total > totalNoOfCase) {
            $("#punitivevigilance_riskwisebreakup_groupc_numberofofficer,#punitivevigilance_riskwisebreakup_groupb_numberofofficer,#punitivevigilance_riskwisebreakup_groupa_numberofofficer,#punitivevigilance_riskwisebreakup_js_numberofofficer").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });



    $("#punitivevigilance_riskwisebreakup_groupc_officeragainst,#punitivevigilance_riskwisebreakup_groupb_officeragainst,#punitivevigilance_riskwisebreakup_groupa_officeragainst,#punitivevigilance_riskwisebreakup_js_officeragainst").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_officeragainst,#punitivevigilance_riskwisebreakup_groupb_officeragainst,#punitivevigilance_riskwisebreakup_groupa_officeragainst,#punitivevigilance_riskwisebreakup_js_officeragainst").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalNoOfCase = parseFloat($("#punitive_vigilance_majorpenalty_numberofofficer_against").val()) + parseFloat($("#punitive_vigilance_minorpenalty_numberofofficer_against").val())
        if (totalNoOfCase != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalNoOfCase,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalNoOfCase) {
            $("#punitivevigilance_riskwisebreakup_groupc_officeragainst,#punitivevigilance_riskwisebreakup_groupb_officeragainst,#punitivevigilance_riskwisebreakup_groupa_officeragainst,#punitivevigilance_riskwisebreakup_js_officeragainst").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });


    $("#punitivevigilance_riskwisebreakup_groupc_pensioncut,#punitivevigilance_riskwisebreakup_groupb_pensioncut,#punitivevigilance_riskwisebreakup_groupa_pensioncut,#punitivevigilance_riskwisebreakup_js_pensioncut").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_pensioncut,#punitivevigilance_riskwisebreakup_groupb_pensioncut,#punitivevigilance_riskwisebreakup_groupa_pensioncut,#punitivevigilance_riskwisebreakup_js_pensioncut").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        // var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val());
        if (parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val()) != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val())) {
            $("#punitivevigilance_riskwisebreakup_groupc_pensioncut,#punitivevigilance_riskwisebreakup_groupb_pensioncut,#punitivevigilance_riskwisebreakup_groupa_pensioncut,#punitivevigilance_riskwisebreakup_js_pensioncut").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });


    $("#punitivevigilance_riskwisebreakup_groupc_dismissal,#punitivevigilance_riskwisebreakup_groupb_dismissal,#punitivevigilance_riskwisebreakup_groupa_dismissal,#punitivevigilance_riskwisebreakup_js_dismissal").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_dismissal,#punitivevigilance_riskwisebreakup_groupb_dismissal,#punitivevigilance_riskwisebreakup_groupa_dismissal,#punitivevigilance_riskwisebreakup_js_dismissal").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        // var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val());
        if (parseFloat($("#punitive_vigilance_majorpenalty_dismissal").val()) != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + parseFloat($("#punitive_vigilance_majorpenalty_dismissal").val()),
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > parseFloat($("#punitive_vigilance_majorpenalty_dismissal").val())) {
            $("#punitivevigilance_riskwisebreakup_groupc_dismissal,#punitivevigilance_riskwisebreakup_groupb_dismissal,#punitivevigilance_riskwisebreakup_groupa_dismissal,#punitivevigilance_riskwisebreakup_js_dismissal").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });


    $("#punitivevigilance_riskwisebreakup_groupc_reductionscale,#punitivevigilance_riskwisebreakup_groupb_reductionscale,#punitivevigilance_riskwisebreakup_groupa_reductionscale,#punitivevigilance_riskwisebreakup_js_reductionscale").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_reductionscale,#punitivevigilance_riskwisebreakup_groupb_reductionscale,#punitivevigilance_riskwisebreakup_groupa_reductionscale,#punitivevigilance_riskwisebreakup_js_reductionscale").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_reduction_scale").val()) + parseFloat($("#punitive_vigilance_minorpenalty_reduction_lowerstage").val());
        if (totalcut != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalcut,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalcut) {
            $("#punitivevigilance_riskwisebreakup_groupc_reductionscale,#punitivevigilance_riskwisebreakup_groupb_reductionscale,#punitivevigilance_riskwisebreakup_groupa_reductionscale,#punitivevigilance_riskwisebreakup_js_reductionscale").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });
    

    $("#punitivevigilance_riskwisebreakup_groupc_majorpenalties,#punitivevigilance_riskwisebreakup_groupb_majorpenalties,#punitivevigilance_riskwisebreakup_groupa_majorpenalties,#punitivevigilance_riskwisebreakup_js_majorpenalties").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_majorpenalties,#punitivevigilance_riskwisebreakup_groupb_majorpenalties,#punitivevigilance_riskwisebreakup_groupa_majorpenalties,#punitivevigilance_riskwisebreakup_js_majorpenalties").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_other_majorpenalties").val());
        if (totalcut != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalcut,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalcut) {
            $("#punitivevigilance_riskwisebreakup_groupc_majorpenalties,#punitivevigilance_riskwisebreakup_groupb_majorpenalties,#punitivevigilance_riskwisebreakup_groupa_majorpenalties,#punitivevigilance_riskwisebreakup_js_majorpenalties").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });
    

    $("#punitivevigilance_riskwisebreakup_groupc_minorpenalties,#punitivevigilance_riskwisebreakup_groupb_minorpenalties,#punitivevigilance_riskwisebreakup_groupa_minorpenalties,#punitivevigilance_riskwisebreakup_js_minorpenalties").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_minorpenalties,#punitivevigilance_riskwisebreakup_groupb_minorpenalties,#punitivevigilance_riskwisebreakup_groupa_minorpenalties,#punitivevigilance_riskwisebreakup_js_minorpenalties").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_minorpenalties").val()) + parseFloat($("#punitive_vigilance_minorpenalty_postponement").val()) + parseFloat($("#punitive_vigilance_minorpenalty_recovery_pay").val()) + parseFloat($("#punitive_vigilance_minorpenalty_holding_promotion").val());
        if (totalcut != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalcut,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalcut) {
            $("#punitivevigilance_riskwisebreakup_groupc_minorpenalties,#punitivevigilance_riskwisebreakup_groupb_minorpenalties,#punitivevigilance_riskwisebreakup_groupa_minorpenalties,#punitivevigilance_riskwisebreakup_js_minorpenalties").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });
    

    $("#punitivevigilance_riskwisebreakup_groupc_censure,#punitivevigilance_riskwisebreakup_groupb_censure,#punitivevigilance_riskwisebreakup_groupa_censure,#punitivevigilance_riskwisebreakup_js_censure").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_censure,#punitivevigilance_riskwisebreakup_groupb_censure,#punitivevigilance_riskwisebreakup_groupa_censure,#punitivevigilance_riskwisebreakup_js_censure").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_censure_warning").val()) + parseFloat($("#punitive_vigilance_minorpenalty_censure").val());
        if (totalcut != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalcut,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalcut) {
            $("#punitivevigilance_riskwisebreakup_groupc_censure,#punitivevigilance_riskwisebreakup_groupb_censure,#punitivevigilance_riskwisebreakup_groupa_censure,#punitivevigilance_riskwisebreakup_js_censure").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });
    

    $("#punitivevigilance_riskwisebreakup_groupc_noaction,#punitivevigilance_riskwisebreakup_groupb_noaction,#punitivevigilance_riskwisebreakup_groupa_noaction,#punitivevigilance_riskwisebreakup_js_noaction").on("keyup", function () {
        var total = 0;
        $("#punitivevigilance_riskwisebreakup_groupc_noaction,#punitivevigilance_riskwisebreakup_groupb_noaction,#punitivevigilance_riskwisebreakup_groupa_noaction,#punitivevigilance_riskwisebreakup_js_noaction").each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        var totalcut = parseFloat($("#punitive_vigilance_majorpenalty_noaction").val()) + parseFloat($("#punitive_vigilance_minorpenalty_exoneration").val());
        if (totalcut != total) {
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: 'Total must be equal to: ' + totalcut,
                showConfirmButton: false,
                timer: 3000, // Duration in milliseconds
            });
        }

        if (total > totalcut) {
            $("#punitivevigilance_riskwisebreakup_groupc_noaction,#punitivevigilance_riskwisebreakup_groupb_noaction,#punitivevigilance_riskwisebreakup_groupa_noaction,#punitivevigilance_riskwisebreakup_js_noaction").each(function () {
                // Convert to float and default to 0 if NaN
                $(this).val(0);
            });
        }
        performComTotal();
    });

    function CHECK_MAJOR_PENEALTY_PROCEEDINGS() {
        var total = 0;
        $(
            "#punitive_vigilance_majorpenalty_cutinpension,#punitive_vigilance_majorpenalty_dismissal,#punitive_vigilance_majorpenalty_reduction_scale,#punitive_vigilance_majorpenalty_other_majorpenalties,#punitive_vigilance_majorpenalty_minorpenalties,#punitive_vigilance_majorpenalty_censure_warning,#punitive_vigilance_majorpenalty_noaction"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var val = parseFloat(
            $("#punitive_vigilance_majorpenalty_numberofofficer_against").val()
        );
        if (total != val) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(B) Major Penalty Proceedings must be equal to = ' + parseFloat($('#punitive_vigilance_majorpenalty_numberofofficer_against').val()),
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitive_vigilance_majorpenalty_cutinpension").focus();
            return false;
        } return true;
    }
    //

    function CHECK_MINOR_PENEALTY_PROCEEDINGS() {
        var total = 0;
        $(
            "#punitive_vigilance_minorpenalty_reduction_lowerstage,#punitive_vigilance_minorpenalty_postponement,#punitive_vigilance_minorpenalty_recovery_pay,#punitive_vigilance_minorpenalty_holding_promotion,#punitive_vigilance_minorpenalty_censure,#punitive_vigilance_minorpenalty_exoneration"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var val = parseFloat(
            $("#punitive_vigilance_minorpenalty_numberofofficer_against").val()
        );
        if (total != val) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(C) Minor Penalty Proceedings must be equal to = ' + parseFloat($('#punitive_vigilance_minorpenalty_numberofofficer_against').val()),
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitive_vigilance_minorpenalty_reduction_lowerstage").focus();
            return false;
        } return true;
    }
    function CHECK_RANK_NO_OF_CASES() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_numberofofficer,#punitivevigilance_riskwisebreakup_groupb_numberofofficer,#punitivevigilance_riskwisebreakup_groupa_numberofofficer,#punitivevigilance_riskwisebreakup_js_numberofofficer"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalNoOfCase =
            parseFloat($("#punitive_vigilance_minorpenalty_numberofcase").val()) +
            parseFloat($("#punitive_vigilance_majorpenalty_numberofcase").val());
        if (total != totalNoOfCase) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) No of Cases must be equal to = ' + totalNoOfCase,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_numberofofficer").focus();
            return false;
        } return true;
    }

    function CHECK_RANK_NO_OF_OFFICIALS() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_officeragainst,#punitivevigilance_riskwisebreakup_groupb_officeragainst,#punitivevigilance_riskwisebreakup_groupa_officeragainst,#punitivevigilance_riskwisebreakup_js_officeragainst"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalNoOfCase =
            parseFloat(
                $("#punitive_vigilance_majorpenalty_numberofofficer_against").val()
            ) +
            parseFloat(
                $("#punitive_vigilance_minorpenalty_numberofofficer_against").val()
            );
        if (total != totalNoOfCase) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D)No.of officials against whom proceedings finalized must be equal to = ' + totalNoOfCase,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_officeragainst").focus();
            return false;
        } return true;
    }

    function CHECK_CUT_IN_PENSION() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_pensioncut,#punitivevigilance_riskwisebreakup_groupb_pensioncut,#punitivevigilance_riskwisebreakup_groupa_pensioncut,#punitivevigilance_riskwisebreakup_js_pensioncut"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        if (
            total !=
            parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val())
        ) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Cut in pension imposed must be equal to = ' + parseFloat($("#punitive_vigilance_majorpenalty_cutinpension").val()),
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_pensioncut").focus();
            return false;
        } return true;
    }

    function CHECK_DISMISSAL() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_dismissal,#punitivevigilance_riskwisebreakup_groupb_dismissal,#punitivevigilance_riskwisebreakup_groupa_dismissal,#punitivevigilance_riskwisebreakup_js_dismissal"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });

        if (
            total != parseFloat($("#punitive_vigilance_majorpenalty_dismissal").val())
        ) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Dismissal/Removal/Compulsory Retirement imposed must be equal to = ' + parseFloat($("#punitive_vigilance_majorpenalty_dismissal").val()),
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_dismissal").focus();
            return false;
        } return true;
    }
    //

    function CHECK_REDUCTION() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_reductionscale,#punitivevigilance_riskwisebreakup_groupb_reductionscale,#punitivevigilance_riskwisebreakup_groupa_reductionscale,#punitivevigilance_riskwisebreakup_js_reductionscale"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalcut =
            parseFloat($("#punitive_vigilance_majorpenalty_reduction_scale").val()) +
            parseFloat(
                $("#punitive_vigilance_minorpenalty_reduction_lowerstage").val()
            );
        if (totalcut != total) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Reduction to lower time scale/in Rank imposed must be equal to = ' + totalcut,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_reductionscale").focus();
            return false;
        } return true;
    }

    function CHECK_OTHER_MAJOR() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_majorpenalties,#punitivevigilance_riskwisebreakup_groupb_majorpenalties,#punitivevigilance_riskwisebreakup_groupa_majorpenalties,#punitivevigilance_riskwisebreakup_js_majorpenalties"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        if (
            parseFloat(
                $("#punitive_vigilance_majorpenalty_other_majorpenalties").val()
            ) != total
        ) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Other Major penalties imposed must be equal to = ' + parseFloat($("#punitive_vigilance_majorpenalty_other_majorpenalties").val()),
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_majorpenalties").focus();
            return false;
        } return true;
    }

    function CHECK_MINOR_PENALTIES() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_minorpenalties,#punitivevigilance_riskwisebreakup_groupb_minorpenalties,#punitivevigilance_riskwisebreakup_groupa_minorpenalties,#punitivevigilance_riskwisebreakup_js_minorpenalties"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalcut =
            parseFloat($("#punitive_vigilance_majorpenalty_minorpenalties").val()) +
            parseFloat($("#punitive_vigilance_minorpenalty_postponement").val()) +
            parseFloat($("#punitive_vigilance_minorpenalty_recovery_pay").val()) +
            parseFloat($("#punitive_vigilance_minorpenalty_holding_promotion").val());
        if (totalcut != total) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Minor Penalties other than Censure/ Warning must be equal to = ' + totalcut,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_minorpenalties").focus();
            return false;
        } return true;
    }

    function CHECK_CENSURE_IMPOSED() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_censure,#punitivevigilance_riskwisebreakup_groupb_censure,#punitivevigilance_riskwisebreakup_groupa_censure,#punitivevigilance_riskwisebreakup_js_censure"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalcut =
            parseFloat($("#punitive_vigilance_majorpenalty_censure_warning").val()) +
            parseFloat($("#punitive_vigilance_minorpenalty_censure").val());
        if (totalcut != total) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) Censure imposed must be equal to = ' + totalcut,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_censure").focus();
            return false;
        } return true;
    }

    function CHECK_NO_OF_EXONERATION() {
        var total = 0;
        $(
            "#punitivevigilance_riskwisebreakup_groupc_noaction,#punitivevigilance_riskwisebreakup_groupb_noaction,#punitivevigilance_riskwisebreakup_groupa_noaction,#punitivevigilance_riskwisebreakup_js_noaction"
        ).each(function () {
            // Convert to float and default to 0 if NaN
            var value = parseFloat($(this).val()) || 0;
            total += value;
        });
        var totalcut =
            parseFloat($("#punitive_vigilance_majorpenalty_noaction").val()) +
            parseFloat($("#punitive_vigilance_minorpenalty_exoneration").val());
        if (totalcut != total) {
            SAVE_FLAG = false;
            Swal.fire({
                toast: true,
                position: 'top-end', // Position of the toast
                icon: 'info', // Type of icon (success, error, warning, info)
                title: '7.(D) No action exoneration must be equal to = ' + totalcut,
                showConfirmButton: false,
                timer: 5000, //timerProgressBar: true
            });
            $("#punitivevigilance_riskwisebreakup_groupc_noaction").focus();
            return false;
        } return true;
    }

    function SAVE_CHECK() {
        ////debugger;
        SAVE_FLAG = true;
        // Check conditions and break execution if any return false
        if (!CHECK_MAJOR_PENEALTY_PROCEEDINGS()) {
            return false;
        }
        if (!CHECK_MINOR_PENEALTY_PROCEEDINGS()) {
            return false;
        }
        if (!CHECK_RANK_NO_OF_CASES()) {
            return false;
        }
        if (!CHECK_RANK_NO_OF_OFFICIALS()) {
            return false;
        }
        if (!CHECK_CUT_IN_PENSION()) {
            return false;
        }
        if (!CHECK_DISMISSAL()) {
            return false;
        }
        if (!CHECK_REDUCTION()) {
            return false;
        }
        if (!CHECK_OTHER_MAJOR()) {
            return false;
        }
        if (!CHECK_MINOR_PENALTIES()) {
            return false;
        }
        if (!CHECK_CENSURE_IMPOSED()) {
            return false;
        }
        if (!CHECK_NO_OF_EXONERATION()) {
            return false;
        }
        return SAVE_FLAG;
    }

    function VERIFY_SAVE_PUNITIVE_VIG() {
        if (SAVE_CHECK()) {
            return validateFields();
        }
        else {
            // Swal.fire({
            //     toast: true,
            //     position: 'top-end', // Position of the toast
            //     icon: 'info', // Type of icon (success, error, warning, info)
            //     title: 'Please verify the data. Something is wrong.',
            //     showConfirmButton: false,
            //     timer: 3000, // Duration in milliseconds
            // });
            return false;
        }
    }

    function VERIFY_NEXT_PUNITIVE_VIG() {
        ////debugger;
        if (SAVE_CHECK()) {
            return confirmFormSubmission('PunitiveVigilanceQPRForm');
        }
        else {
            // Swal.fire({
            //     toast: true,
            //     position: 'top-end', // Position of the toast
            //     icon: 'info', // Type of icon (success, error, warning, info)
            //     title: 'Please verify the data. Something is wrong.',
            //     showConfirmButton: false,
            //     timer: 3000, // Duration in milliseconds
            // });
            return false;
        }
    }

</script>

