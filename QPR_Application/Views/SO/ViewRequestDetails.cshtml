@model QPR_Application.Models.Entities.UserRequests

@{
    ViewData["Title"] = "ViewRequestDetails";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    bool isReadonly = ViewBag.IsReadonly;
}

<style>
    textarea, span {
        font-size: 1em !important
    }
</style>

<h1>Request Details</h1>

<div style="margin-bottom:18rem">
    <hr />
    <form asp-action="UpdateRequestDetails" method="post" class="w-50 m-auto">
        @Html.AntiForgeryToken()

        <dl class="row">

            <input asp-for="request_id" hidden readonly />

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.subject_id)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="text" class="form-control" asp-for="subject_id" readonly />
                @Html.ValidationMessageFor(model => model.subject_id)
            </dd>

            <dt class="col-sm-2 mt-3 ">
                Subject
            </dt>
            <dd class="col-sm-10 mt-3">
                <span class="form-control">@Model.subject</span>
                <input asp-for="subject" hidden readonly />
            </dd>

            <dt class="col-sm-2 mt-3 ">
                Description
            </dt>
            <dd class="col-sm-10 mt-3">
                <span class="form-control">@Model.description</span>
                <input asp-for="description" hidden readonly />
            </dd>

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.created_date)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="text" class="form-control" asp-for="created_date" readonly />
            </dd>

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.userid)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="text" class="form-control" asp-for="userid" readonly />
                @Html.ValidationMessageFor(model => model.userid)
            </dd>

            <div hidden>
                <dt class="col-sm-2 mt-3">
                    @Html.DisplayNameFor(model => model.qtrreport)
                </dt>
                <dd class="col-sm-10 mt-3">
                    <input type="number" class="form-control" asp-for="qtrreport" readonly />
                    @Html.ValidationMessageFor(model => model.qtrreport)
                </dd>
            </div>

            @if (Model.qtryear > 0)
            {
                <dt class="col-sm-2 mt-3 ">
                    Year
                </dt>
                <dd class="col-sm-10 mt-3">
                    <span class="form-control">@Model.qtryear</span>
                    <input asp-for="qtryear" hidden readonly />
                </dd>
            }

            @if (Model.qtryear > 0)
            {
                <dt class="col-sm-2 mt-3 ">
                    Quarter
                </dt>
                <dd class="col-sm-10 mt-3">
                    <span class="form-control">@(string.IsNullOrEmpty(Model.qtrQuarterName) ? "N/A" : Model.qtrQuarterName)</span>
                    <input asp-for="qtrQuarterName" hidden readonly />
                </dd>
            }

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.ip)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="text" class="form-control" asp-for="ip" readonly />
            </dd>

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.isActive)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="checkbox" class="form-check-input" asp-for="isActive" readonly />
                @Html.ValidationMessageFor(model => model.isActive)
            </dd>

            <dt class="col-sm-2 mt-3" hidden>
                @Html.DisplayNameFor(model => model.isResolved)
            </dt>
            <dd class="col-sm-10 mt-3" hidden>
                <input type="checkbox" class="form-check-input" asp-for="isResolved" readonly />
                @Html.ValidationMessageFor(model => model.isResolved)
            </dd>

            <dt class="col-sm-2 mt-3 ">
                Action Taken
            </dt>
            @if (Model.ActionTaken != "Approved" && Model.ActionTaken != "Not Approved")
            {
                <dd class="col-sm-10 mt-3 d-flex">
                    <!-- Checkboxes for ActionTaken -->
                    <div class="form-check me-5">
                        <input type="radio" required class="form-check-input" id="approve" name="ActionTaken" value="Approved"
                        @(Model.ActionTaken == "Approved" ? "checked" : "") readonly="@isReadonly" />
                        <label class="form-check-label" for="approve">Approve</label>
                    </div>
                    <div class="form-check">
                        <input type="radio" required class="form-check-input" id="reject" name="ActionTaken" value="Not Approved"
                        @(Model.ActionTaken == "Rejected" ? "checked" : "") readonly="@isReadonly" />
                        <label class="form-check-label" for="reject">Reject</label>
                    </div>
                </dd>
            }
            else
            {
                <dd class="col-sm-10 mt-3 d-flex">
                    <span style="font-weight:700" class="@(Model.ActionTaken == "Approved" ? "text-success" : "text-danger")">@Model.ActionTaken</span>
                </dd>
            }
            <dt class="col-sm-2 mt-3 ">
                @Html.DisplayNameFor(model => model.Remarks)
            </dt>
            <dd class="col-sm-10 mt-3">
                <textarea rows="3" class="form-control" asp-for="Remarks" required readonly="@isReadonly"></textarea>
            </dd>

            <!-- Submit button -->
            <div class="form-group mt-3 d-flex justify-content-between">
                <a class="btn btn-secondary" asp-action="PendingRequests">Back</a>

                @if (Model.ActionTaken != "Approved" && Model.ActionTaken != "Not Approved")
                {
                    <button type="submit" class="btn btn-success">Save</button>
                }
                else
                {
                    <a class="btn btn-danger disabled">Reopen</a>
                }
            </div>
        </dl>
    </form>
</div>


<script>

</script>